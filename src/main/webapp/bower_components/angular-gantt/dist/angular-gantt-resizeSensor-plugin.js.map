{"version":3,"sources":["../src/plugins/resizeSensor.js","../.tmp/generated/plugins/resizeSensor/html2js.js"],"names":[],"mappings":"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","file":"angular-gantt-resizeSensor-plugin.js","sourcesContent":["(function(){\n    /* global ResizeSensor: false */\n    /* global ElementQueries: false */\n    'use strict';\n    angular.module('gantt.resizeSensor', ['gantt']).directive('ganttResizeSensor', [function() {\n        return {\n            restrict: 'E',\n            require: '^gantt',\n            scope: {\n                enabled: '=?'\n            },\n            link: function(scope, element, attrs, ganttCtrl) {\n                var api = ganttCtrl.gantt.api;\n\n                // Load options from global options attribute.\n                if (scope.options && typeof(scope.options.resizeSensor) === 'object') {\n                    for (var option in scope.options.resizeSensor) {\n                        scope[option] = scope.options.resizeSensor[option];\n                    }\n                }\n\n                if (scope.enabled === undefined) {\n                    scope.enabled = true;\n                }\n\n                function buildSensors() {\n                    var ganttElement = ganttCtrl.gantt.$element[0];\n                    var ganttSensor = new ResizeSensor(ganttElement, function() {\n                        // See issue #664\n                        var changed = false;\n                        if (Math.abs(ganttElement.clientWidth - ganttCtrl.gantt.$scope.ganttElementWidth) > 1) {\n                            ganttCtrl.gantt.$scope.ganttElementWidth = ganttElement.clientWidth;\n                            changed = true;\n                        }\n                        if (Math.abs(ganttElement.clientHeight - ganttCtrl.gantt.$scope.ganttElementHeight) > 1) {\n                            ganttCtrl.gantt.$scope.ganttElementHeight = ganttElement.clientHeight;\n                            changed = true;\n                        }\n                        if (changed) {\n                            ganttCtrl.gantt.$scope.$apply();\n                        }\n                    });\n                    var containerSensor = new ResizeSensor(ganttElement.parentElement, function() {\n                        var el = ganttElement.parentElement;\n                        var height = el.offsetHeight;\n\n                        var style = getComputedStyle(el);\n                        height = height - parseInt(style.marginTop) - parseInt(style.marginBottom);\n\n                        ganttCtrl.gantt.$scope.ganttContainerHeight = height;\n\n                        var width = el.offsetWidth;\n\n                        style = getComputedStyle(el);\n                        width = width - parseInt(style.marginLeft) - parseInt(style.marginRight);\n\n                        ganttCtrl.gantt.$scope.ganttContainerWidth = width;\n\n                        ganttCtrl.gantt.$scope.$apply();\n                    });\n                    return [ganttSensor, containerSensor];\n                }\n\n                var rendered = false;\n                var sensors = [];\n\n                function detach(sensors) {\n                    for (var i=0; i<sensors; i++) {\n                        sensors[i].detach();\n                    }\n                }\n\n                api.core.on.rendered(scope, function() {\n                    rendered = true;\n                    detach(sensors);\n                    if (scope.enabled) {\n                        ElementQueries.update();\n                        sensors = buildSensors();\n                    }\n                });\n\n                scope.$watch('enabled', function(newValue) {\n                    if (rendered) {\n                        if (newValue) {\n                            ElementQueries.update();\n                            sensors = buildSensors();\n                        } else if (!newValue) {\n                            detach(sensors);\n                            sensors = [];\n                        }\n                    }\n                });\n            }\n        };\n    }]);\n}());\n\n","angular.module('gantt.resizeSensor.templates', []).run(['$templateCache', function ($templateCache) {\n\n}]);\n"]}